version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: measurements_storage
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres_service/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  postgres_service:
    build: ./postgres_service
    container_name: postgres_service_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: measurements_storage
      DB_SSL_MODE: disable
    volumes:
      - ./postgres_service:/app
    working_dir: /app
    healthcheck:
      test: ["CMD-SHELL", "pgrep -f main || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  notification_service:
    build: ./notification_service
    container_name: notification_service_app
    depends_on:
      postgres_service:
        condition: service_healthy
      postgres:
        condition: service_healthy
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: password
      DB_NAME: measurements_storage
      DB_SSL_MODE: disable
    volumes:
      - ./notification_service:/app
    working_dir: /app

volumes:
  postgres_data: